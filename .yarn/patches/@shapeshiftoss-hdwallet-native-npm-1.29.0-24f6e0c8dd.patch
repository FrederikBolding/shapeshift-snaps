diff --git a/dist/ethereum.js b/dist/ethereum.js
index b4e46204dd972abd207083ba8ad6cec9f5e0d748..9b23dd4088d66a1740790d38cc6625ae431c60ed 100644
--- a/dist/ethereum.js
+++ b/dist/ethereum.js
@@ -38,15 +38,24 @@ var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (
     if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
     return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
 };
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.MixinNativeETHWallet = exports.MixinNativeETHWalletInfo = void 0;
 const core = __importStar(require("@shapeshiftoss/hdwallet-core"));
 const ethers = __importStar(require("ethers"));
-const lodash_1 = __importDefault(require("lodash"));
 const Isolation = __importStar(require("./crypto/isolation"));
+
+// Replacement for unsupported lodash isEqual() function
+function isEqual(a, b) {
+    if (a === b) return true;
+    if (a == null || b == null) return false;
+    if (a.length !== b.length) return false;
+  
+    for (var i = 0; i < a.length; ++i) {
+      if (a[i] !== b[i]) return false;
+    }
+    return true;
+  }
+
 function MixinNativeETHWalletInfo(Base) {
     // eslint-disable-next-line @typescript-eslint/no-shadow
     return class MixinNativeETHWalletInfo extends Base {
@@ -115,7 +124,7 @@ function MixinNativeETHWallet(Base) {
             }
             ethGetAddress(msg) {
                 return __awaiter(this, void 0, void 0, function* () {
-                    if (!lodash_1.default.isEqual(msg.addressNList, core.bip32ToAddressNList("m/44'/60'/0'/0/0"))) {
+                    if (!isEqual(msg.addressNList, core.bip32ToAddressNList("m/44'/60'/0'/0/0"))) {
                         throw new Error("path not supported");
                     }
                     // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
diff --git a/dist/native.js b/dist/native.js
index a6b21b89879f1bffe1b0887802ca4f7ed0c8162c..626478ea2481351e817897a85f9109f2313199ee 100644
--- a/dist/native.js
+++ b/dist/native.js
@@ -47,7 +47,6 @@ exports.create = exports.info = exports.isNative = exports.NativeHDWallet = expo
 const core = __importStar(require("@shapeshiftoss/hdwallet-core"));
 const bip39 = __importStar(require("bip39"));
 const eventemitter2 = __importStar(require("eventemitter2"));
-const lodash_1 = __importDefault(require("lodash"));
 const binance_1 = require("./binance");
 const bitcoin_1 = require("./bitcoin");
 const cosmos_1 = require("./cosmos");
@@ -68,6 +67,12 @@ var NativeEvents;
 function isMnemonicInterface(x) {
     return core.isIndexable(x) && typeof x.toSeed === "function";
 }
+
+// Replacement for unsupported lodash isObject() function
+function isObject(x) {
+    return typeof x === "object" && x !== null;
+}
+
 class NativeHDWalletInfoBase {
     getVendor() {
         return "Native";
@@ -417,7 +422,7 @@ class NativeHDWallet extends bitcoin_1.MixinNativeBTCWallet(fio_1.MixinNativeFio
 exports.NativeHDWallet = NativeHDWallet;
 _NativeHDWallet_deviceId = new WeakMap(), _NativeHDWallet_initialized = new WeakMap(), _NativeHDWallet_masterKey = new WeakMap();
 function isNative(wallet) {
-    return lodash_1.default.isObject(wallet) && wallet._isNative;
+    return isObject(wallet) && wallet._isNative;
 }
 exports.isNative = isNative;
 function info() {
diff --git a/package.json b/package.json
index 19f281cabe9a668cffa745781f821ab54f5de142..4d73371e71abfbe4db4ffce9088c9344554da52f 100644
--- a/package.json
+++ b/package.json
@@ -37,7 +37,7 @@
     "web-encoding": "^1.1.0"
   },
   "devDependencies": {
-    "@cosmjs/proto-signing": "^0.27.1",
+    "@cosmjs/proto-signing": "0.27.1",
     "@peculiar/webcrypto": "^1.1.3",
     "@types/bchaddrjs": "^0.4.0",
     "@types/big.js": "^6.0.2",
